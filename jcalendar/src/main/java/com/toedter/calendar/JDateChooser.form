<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.5" maxVersion="1.9" type="org.netbeans.modules.form.forminfo.JPanelFormInfo">
  <NonVisualComponents>
    <Container class="javax.swing.JPopupMenu" name="popup">
      <AuxValues>
        <AuxValue name="JavaCodeGenerator_CreateCodeCustom" type="java.lang.String" value="new JPopupMenu() {&#xd;&#xa;    private static final long serialVersionUID = -6078272560337577761L;&#xd;&#xa;&#xd;&#xa;    @Override&#xd;&#xa;public void setVisible(boolean visible) {&#xd;&#xa;        Boolean isCanceled = (Boolean) getClientProperty(&quot;JPopupMenu.firePopupMenuCanceled&quot;);&#xd;&#xa;        if (visible&#xd;&#xa;                || (!visible &amp;&amp; dateSelected)&#xd;&#xa;                || ((isCanceled != null) &amp;&amp; !visible &amp;&amp; isCanceled)) {&#xd;&#xa;            super.setVisible(visible);&#xd;&#xa;        }&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;"/>
        <AuxValue name="JavaCodeGenerator_CreateCodePost" type="java.lang.String" value="popup.add(jcalendar);&#xd;&#xa;"/>
        <AuxValue name="JavaCodeGenerator_ListenersCodePost" type="java.lang.String" value="// Corrects a problem that occured when the JMonthChooser&apos;s combobox is&#xd;&#xa;// displayed, and a click outside the popup does not close it.&#xd;&#xa;// The following idea was originally provided by forum user&#xd;&#xa;// podiatanapraia:&#xd;&#xa;ChangeListener changeListener2 = new ChangeListener() {&#xd;&#xa;    boolean hasListened = false;&#xd;&#xa;&#xd;&#xa;    @Override&#xd;&#xa;public void stateChanged(ChangeEvent e) {&#xd;&#xa;        if (hasListened) {&#xd;&#xa;            hasListened = false;&#xd;&#xa;            return;&#xd;&#xa;        }&#xd;&#xa;        if (popup.isVisible()&#xd;&#xa;                &amp;&amp; JDateChooser.this.jcalendar.monthChooser&#xd;&#xa;                        .getComboBox().hasFocus()) {&#xd;&#xa;            MenuElement[] me = MenuSelectionManager.defaultManager()&#xd;&#xa;                    .getSelectedPath();&#xd;&#xa;            MenuElement[] newMe = new MenuElement[me.length + 1];&#xd;&#xa;            newMe[0] = popup;&#xd;&#xa;            for (int i = 0; i &lt; me.length; i++) {&#xd;&#xa;                newMe[i + 1] = me[i];&#xd;&#xa;            }&#xd;&#xa;            hasListened = true;&#xd;&#xa;            MenuSelectionManager.defaultManager()&#xd;&#xa;                    .setSelectedPath(newMe);&#xd;&#xa;        }&#xd;&#xa;    }&#xd;&#xa;};&#xd;&#xa;// Thanks to forum member Kris Kemper for the memory leak fix (and below also)&#xd;&#xa;changeListener = new WeakChangeListenerProxy(changeListener2);&#xd;&#xa;&#xd;&#xa;MenuSelectionManager.defaultManager().addChangeListener(changeListener);&#xd;&#xa;// end of code provided by forum user podiatanapraia&#xd;&#xa;"/>
      </AuxValues>

      <Layout class="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout">
        <Property name="useNullLayout" type="boolean" value="true"/>
      </Layout>
    </Container>
  </NonVisualComponents>
  <Properties>
    <Property name="name" type="java.lang.String" value="JDateChooser" noResource="true"/>
  </Properties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,1,44,0,0,1,-112"/>
  </AuxValues>

  <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout"/>
  <SubComponents>
    <Component class="javax.swing.JButton" name="calendarButton">
      <Properties>
        <Property name="margin" type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
          <Insets value="[0, 0, 0, 0]"/>
        </Property>
      </Properties>
      <AuxValues>
        <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="add(this.dateEditor.getUiComponent(), BorderLayout.CENTER);&#xd;&#xa;"/>
        <AuxValue name="JavaCodeGenerator_CreateCodeCustom" type="java.lang.String" value="new JButton(icon) {&#xd;&#xa;    private static final long serialVersionUID = -1913767779079949668L;&#xd;&#xa;&#xd;&#xa;    @Override&#xd;&#xa;public boolean isFocusable() {&#xd;&#xa;        return false;&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;"/>
        <AuxValue name="JavaCodeGenerator_CreateCodePre" type="java.lang.String" value="// Display a calendar button with an icon&#xd;&#xa;URL iconURL = getClass().getResource(&#xd;&#xa;        &quot;/com/toedter/calendar/images/JDateChooserIcon.gif&quot;);&#xd;&#xa;ImageIcon icon = new ImageIcon(iconURL);&#xd;&#xa;"/>
        <AuxValue name="JavaCodeGenerator_ListenersCodePost" type="java.lang.String" value="calendarButton.addActionListener(this);&#xd;&#xa;// calendarButton.addFocusListener(this);&#xd;&#xa;"/>
      </AuxValues>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout" value="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout$BorderConstraintsDescription">
          <BorderConstraints direction="East"/>
        </Constraint>
      </Constraints>
    </Component>
  </SubComponents>
</Form>
